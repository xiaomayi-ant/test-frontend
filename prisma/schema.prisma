generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "darwin-arm64"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Conversation {
  id        String    @id
  title     String    @default("新聊天")
  threadId  String?
  archived  Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime
  Message   Message[]

  @@index([updatedAt(sort: Desc)])
}

model Message {
  id             String       @id
  conversationId String
  role           Role
  content        Json
  createdAt      DateTime     @default(now())
  Conversation   Conversation @relation(fields: [conversationId], references: [id], onDelete: Cascade)

  @@index([conversationId, createdAt])
}

model thread_messages {
  id         BigInt   @id @default(autoincrement())
  thread_id  String
  role       String
  content    Json
  created_at DateTime @default(now()) @db.Timestamptz(6)
  threads    threads  @relation(fields: [thread_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([thread_id, created_at], map: "idx_thread_messages_thread_created")
  @@index([thread_id], map: "idx_thread_messages_thread_id")
}

model threads {
  id              String            @id
  status          String            @default("active")
  created_at      DateTime          @default(now()) @db.Timestamptz(6)
  updated_at      DateTime          @default(now()) @db.Timestamptz(6)
  thread_messages thread_messages[]
}

enum Role {
  USER
  ASSISTANT
}
